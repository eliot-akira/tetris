{
  "version": 3,
  "sources": ["../src/utils.js", "../src/settings.js", "../src/preview.js", "../src/hold.js", "../src/menu.js", "../src/piece.js", "../src/stack.js", "../src/elements.js", "../src/tetris.js", "../src/index.js"],
  "sourcesContent": ["import { spriteCanvas, state } from './tetris'\n\n/**\n * Park Miller \"Minimal Standard\" PRNG.\n */\nexport const rng = new function () {\n  this.seed = Math.random() // 1\n  this.next = function () {\n    // Returns a float between 0.0, and 1.0\n    return this.gen() / 2147483647\n  }\n  this.gen = function () {\n    return (this.seed = (this.seed * 16807) % 2147483647)\n  }\n}()\n\n/**\n * Clear canvas.\n */\nexport function clear(ctx) {\n  ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height)\n}\n\n/**\n * Draws a 2d array of minos.\n */\nexport function draw(tetro, cx, cy, ctx, color) {\n  for (let x = 0, len = tetro.length; x < len; x++) {\n    for (let y = 0, wid = tetro[x].length; y < wid; y++) {\n      if (tetro[x][y]) {\n        drawCell(x + cx, y + cy, color !== undefined ? color : tetro[x][y], ctx)\n      }\n    }\n  }\n}\n\n/**\n * Draws a pre-rendered mino.\n */\nfunction drawCell(x, y, color, ctx) {\n  x = x * state.cellSize\n  x = ~~x\n  y = ~~y * state.cellSize - 2 * state.cellSize\n  ctx.drawImage(\n    spriteCanvas,\n    color * state.cellSize,\n    0,\n    state.cellSize,\n    state.cellSize,\n    x,\n    y,\n    state.cellSize,\n    state.cellSize,\n  )\n}\n\nexport function range(start, end, inc) {\n  inc = inc || 1\n  const array = []\n  for (let i = start; i < end; i += inc) {\n    array.push(i)\n  }\n  return array\n}\n\n/**\n * Divisor method to do clock arithmetics, to determine tetromino orientation.\n */\nexport function mod(num, div) {\n  return ((num % div) + div) % div\n}\n", "import { range } from './utils'\n\nexport const set = document.getElementById('settings')\n\nexport const settings = {\n  DAS: 10,\n  ARR: 1,\n  Gravity: 0,\n  'Soft Drop': 31,\n  'Lock Delay': 30,\n  Size: 0,\n  Sound: 0,\n  Volume: 100,\n  Block: 0,\n  Ghost: 1,\n  Grid: 1,\n  Outline: 0,\n}\n\nexport const setting = {\n  DAS: range(0, 31),\n  ARR: range(0, 11),\n  Gravity: (function () {\n    const array = []\n    array.push('Auto')\n    array.push('0G')\n    for (let i = 1; i < 64; i++) array.push(i + '/64G')\n    for (let i = 1; i <= 20; i++) array.push(i + 'G')\n    return array\n  })(),\n  'Soft Drop': (function () {\n    const array = []\n    for (let i = 1; i < 64; i++) array.push(i + '/64G')\n    for (let i = 1; i <= 20; i++) array.push(i + 'G')\n    return array\n  })(),\n  'Lock Delay': range(0, 101),\n  Size: ['Auto', 'Small', 'Medium', 'Large'],\n  Sound: ['Off', 'On'],\n  Volume: range(0, 101),\n  Block: ['Shaded', 'Solid', 'Glossy', 'Arika', 'World'],\n  Ghost: ['Normal', 'Colored', 'Off'],\n  Grid: ['Off', 'On'],\n  Outline: ['Off', 'On'],\n}\n", "import { pieces, previewCtx, previewCanvas } from './tetris'\nimport { clear, draw, rng } from './utils'\n\nclass Preview {\n  constructor() {\n    this.grabBag = this.gen()\n  }\n\n  init() {\n    // TODO fix ugly code lolwut\n    // while (1) {\n    //   this.grabBag = this.gen()\n    //   if ([3, 4, 6].indexOf(this.grabBag[0]) === -1) break\n    // }\n    this.grabBag.push.apply(this.grabBag, this.gen())\n\n    // Initial grabbag is different when countdown ends?\n    this.draw()\n  }\n\n  next() {\n    const next = this.grabBag.shift()\n    if (this.grabBag.length === 7) {\n      this.grabBag.push.apply(this.grabBag, this.gen())\n    }\n    this.draw()\n    return next\n  }\n\n  /**\n   * Creates a \"grab bag\" of the 7 tetrominos.\n   */\n  gen() {\n    console.log('Preview.gen')\n    const pieceList = [0, 1, 2, 3, 4, 5, 6]\n    return pieceList.sort(function () {\n      return 0.5 - rng.next()\n    })\n  }\n\n  /**\n   * Draws the piece preview.\n   */\n  draw() {\n    clear(previewCtx)\n    for (let i = 0; i < 6; i++) {\n      if (this.grabBag[i] === 0 || this.grabBag[i] === 3) {\n        draw(\n          pieces[this.grabBag[i]].tetro,\n          pieces[this.grabBag[i]].x - 3,\n          pieces[this.grabBag[i]].y + 2 + i * 3,\n          previewCtx\n        )\n      } else {\n        draw(\n          pieces[this.grabBag[i]].tetro,\n          pieces[this.grabBag[i]].x - 2.5,\n          pieces[this.grabBag[i]].y + 2 + i * 3,\n          previewCtx\n        )\n      }\n    }\n  }\n}\n\nexport const preview = new Preview()\n", "import { holdCtx, pieces } from './tetris'\nimport { clear, draw } from './utils'\n\nfunction Hold() {\n  this.piece\n}\nHold.prototype.draw = function () {\n  clear(holdCtx)\n  if (this.piece === 0 || this.piece === 3) {\n    draw(\n      pieces[this.piece].tetro,\n      pieces[this.piece].x - 3,\n      2 + pieces[this.piece].y,\n      holdCtx,\n    )\n  } else {\n    draw(\n      pieces[this.piece].tetro,\n      pieces[this.piece].x - 2.5,\n      2 + pieces[this.piece].y,\n      holdCtx,\n    )\n  }\n}\n\nexport const hold = new Hold()\n", "import { resize, binds } from './tetris'\nimport { settings, setting, set } from './settings'\n\nconst version = '0.1.8'\n\nlet setLoop\nlet arrowReleased = true\nlet arrowDelay = 0\n\nconst key = {\n  8: 'Backspace',\n  9: 'Tab',\n  13: 'Enter',\n  16: 'Shift',\n  17: 'Ctrl',\n  18: 'Alt',\n  19: 'Pause',\n  20: 'Caps Lock',\n  27: 'Esc',\n  32: 'Space',\n  33: 'PgUp',\n  34: 'PgDn',\n  35: 'End',\n  36: 'Home',\n  37: '\u2190',\n  38: '\u2191',\n  39: '\u2192',\n  40: '\u2193',\n  45: 'Insert',\n  46: 'Delete',\n  48: '0',\n  49: '1',\n  50: '2',\n  51: '3',\n  52: '4',\n  53: '5',\n  54: '6',\n  55: '7',\n  56: '8',\n  57: '9',\n  59: ';',\n  61: '=',\n  65: 'A',\n  66: 'B',\n  67: 'C',\n  68: 'D',\n  69: 'E',\n  70: 'F',\n  71: 'G',\n  72: 'H',\n  73: 'I',\n  74: 'J',\n  75: 'K',\n  76: 'L',\n  77: 'M',\n  78: 'N',\n  79: 'O',\n  80: 'P',\n  81: 'Q',\n  82: 'R',\n  83: 'S',\n  84: 'T',\n  85: 'U',\n  86: 'V',\n  87: 'W',\n  88: 'X',\n  89: 'Y',\n  90: 'Z',\n  96: '0kpad',\n  97: '1kpad',\n  98: '2kpad',\n  99: '3kpad',\n  100: '4kpad',\n  101: '5kpad',\n  102: '6kpad',\n  103: '7kpad',\n  104: '8kpad',\n  105: '9kpad',\n  106: '*',\n  107: '+',\n  109: '-',\n  110: '.',\n  111: '/',\n  112: 'F1',\n  113: 'F2',\n  114: 'F3',\n  115: 'F4',\n  116: 'F5',\n  117: 'F6',\n  118: 'F7',\n  119: 'F8',\n  120: 'F9',\n  121: 'F10',\n  122: 'F11',\n  123: 'F12',\n  173: '-',\n  187: '=',\n  188: ',',\n  190: '.',\n  191: '/',\n  192: '`',\n  219: '[',\n  220: '\\\\',\n  221: ']',\n  222: \"'\",\n}\n\n/**\n * Show and hide menus.\n */\nconst menus = document.getElementsByClassName('menu')\n\nexport function menu(menuIndex) {\n  for (let i = 0, len = menus.length; i < len; i++) {\n    menus[i].classList.remove('on')\n  }\n  if (menuIndex !== undefined) menus[menuIndex].classList.add('on')\n}\n\n/**\n * Controls Menu\n */\nlet newKey\nlet currCell\nlet tempKey\nconst controls = document.getElementById('controls')\nconst controlCells = controls.getElementsByTagName('td')\n// Give controls an event listener.\nfor (let i = 0, len = controlCells.length; i < len; i++) {\n  controlCells[i].onclick = function () {\n\n    // First check if we're already waiting for an input.\n    if (currCell) {\n\n      // TODO Make this into a function and call it when we press Esc.\n      binds[currCell.id] = tempKey\n      currCell.innerHTML = key[tempKey]\n    }\n    tempKey = binds[this.id]\n    this.innerHTML = 'Press key'\n    currCell = this\n  }\n}\n// Listen for key input if a control has been clicked on.\naddEventListener(\n  'keyup',\n  function (e) {\n    // if click outside of cell or press esc clear currCell\n    // reset binds button.\n    if (currCell) {\n      // Checks if key already in use, and unbinds it.\n      for (const i in binds) {\n        if (e.keyCode === binds[i]) {\n          binds[i] = undefined\n          document.getElementById(i).innerHTML = binds[i]\n        }\n      }\n      // Binds the key and saves the data.\n      binds[currCell.id] = e.keyCode\n      currCell.innerHTML = key[e.keyCode]\n\n      // localStorage.setItem('binds', JSON.stringify(binds));\n      currCell = 0\n    }\n  },\n  false,\n)\n\nlet s\nlet settingsArrow\n\n/**\n * Settings Menu\n */\nfunction settingsLoop() {\n  if (arrowReleased || arrowDelay >= 6) {\n    if (settingsArrow) { settings[s] = settings[s] === 0 ? setting[s].length - 1 : settings[s] - 1 } else { settings[s] = settings[s] === setting[s].length - 1 ? 0 : settings[s] + 1 }\n    saveSetting(s)\n    arrowReleased = false\n  } else {\n    arrowDelay++\n  }\n  setLoop = setTimeout(settingsLoop, 50)\n}\n\nfunction arrowRelease() {\n  resize()\n  arrowReleased = true\n  arrowDelay = 0\n  clearTimeout(setLoop)\n}\nfunction left() {\n  settingsArrow = 1\n  s = this.parentNode.id\n  this.onmouseup = arrowRelease\n  this.onmouseout = arrowRelease\n  settingsLoop()\n}\nfunction right() {\n  settingsArrow = 0\n  s = this.parentNode.id\n  this.onmouseup = arrowRelease\n  this.onmouseout = arrowRelease\n  settingsLoop()\n}\n\n/**\n * LocalStorage functions\n */\nfunction saveSetting(s) {\n\n  // localStorage['version'] = version;\n\n  document.getElementById(s).getElementsByTagName('span')[0].innerHTML =\n    setting[s][settings[s]]\n\n  // localStorage['settings'] = JSON.stringify(settings);\n}\nfunction loadLocalData() {\n  // if (localStorage['binds']) {\n  //   binds = JSON.parse(localStorage.getItem('binds'));\n  //   for (var i = 0, len = controlCells.length; i < len; i++) {\n  //     controlCells[i].innerHTML = key[binds[controlCells[i].id]];\n  //   }\n  // }\n  // // TODO When new version just update with new stuff, rest stays unchanged.\n  // if (localStorage['version'] !== version) {\n  //   localStorage.removeItem('settings');\n  //   localStorage.removeItem('binds');\n  // }\n  // if (localStorage['settings']) {\n\n  //   Object.assign(settings, JSON.parse(localStorage.getItem('settings')));\n  // }\n}\n\nloadLocalData()\nfor (const s in settings) {\n  const div = document.createElement('div')\n  const b = document.createElement('b')\n  const iLeft = document.createElement('i')\n  const span = document.createElement('span')\n  const iRight = document.createElement('i')\n\n  div.id = s\n  b.innerHTML = s + ':'\n  span.innerHTML = setting[s][settings[s]]\n  iLeft.className = 'left'\n  iRight.className = 'right'\n  iLeft.onmousedown = left\n  iRight.onmousedown = right\n\n  set.appendChild(div)\n  div.appendChild(b)\n  div.appendChild(iLeft)\n  div.appendChild(span)\n  div.appendChild(iRight)\n}\n", "import {\n  settings, keysDown, lastKeys, flags, gravity, gravityArr,\n  activeCtx,\n  pieces, activeCanvas,\n  state,\n  msg,\n  init,\n} from './tetris'\nimport { draw, mod } from './utils'\nimport { stack } from './stack'\nimport { setting } from './settings'\nimport { preview } from './preview'\nimport { hold } from './hold'\nimport { menu } from './menu'\n\nclass Piece {\n  constructor() {\n    // this.x\n    // this.y\n    this.pos = 0\n    // this.tetro\n    // this.index\n    // this.kickData\n    this.lockDelay = 0\n    this.shiftDelay = 0\n    // this.shiftDir\n    // this.shiftReleased\n    this.arrDelay = 0\n    this.held = false\n    this.finesse = 0\n    this.dirty = false\n  }\n\n  /**\n   * Removes last active piece, and gets the next active piece from the grab bag.\n   */\n  new(index) {\n    // TODO if no arguments, get next grabbag piece\n    this.pos = 0\n    this.tetro = []\n    this.held = false\n    this.finesse = 0\n    this.dirty = true\n    // TODO change this\n    state.landed = false\n\n    // TODO Make clone object func maybe.\n    // for property in pieces, this.prop = piece.prop\n    this.tetro = pieces[index].tetro\n    this.kickData = pieces[index].kickData\n    this.x = pieces[index].x\n    this.y = pieces[index].y\n    this.index = index\n\n    // TODO Make grabbag object\n    // Preview.next(); == grabbag.next()\n    // Preview.draw();\n    // preview.next();\n\n    // Check for blockout - Similar to ./stack lock out\n    if (!this.moveValid(0, 0, this.tetro)) {\n      state.gameState = 9\n      msg.innerHTML = 'GAME OVER'\n      menu(3)\n      // setTimeout(() => init(0), 3000)\n    }\n  }\n\n  rotate(direction) {\n    // Rotates tetromino.\n    const rotated = []\n    if (direction === -1) {\n      for (let i = this.tetro.length - 1; i >= 0; i--) {\n        rotated[i] = []\n        for (let row = 0; row < this.tetro.length; row++) {\n          rotated[i][this.tetro.length - 1 - row] = this.tetro[row][i]\n        }\n      }\n    } else {\n      for (let i = 0; i < this.tetro.length; i++) {\n        rotated[i] = []\n        for (let row = this.tetro.length - 1; row >= 0; row--) {\n          rotated[i][row] = this.tetro[row][this.tetro.length - 1 - i]\n        }\n      }\n    }\n\n    // Goes thorugh kick data until it finds a valid move.\n    const curPos = mod(this.pos, 4)\n    const newPos = mod(this.pos + direction, 4)\n\n    for (let x = 0, len = this.kickData[0].length; x < len; x++) {\n      if (this.moveValid(\n        this.kickData[curPos][x][0] - this.kickData[newPos][x][0],\n        this.kickData[curPos][x][1] - this.kickData[newPos][x][1],\n        rotated\n      )) {\n        this.x += this.kickData[curPos][x][0] - this.kickData[newPos][x][0]\n        this.y += this.kickData[curPos][x][1] - this.kickData[newPos][x][1]\n        this.tetro = rotated\n        this.pos = newPos\n        // TODO make 180 rotate count as one or just update finess 180s\n        // this.finesse++;\n        break\n      }\n    }\n  }\n\n  checkShift() {\n    // Shift key pressed event.\n    if (keysDown & flags.moveLeft && !(lastKeys & flags.moveLeft)) {\n      this.shiftDelay = 0\n      this.arrDelay = 0\n      this.shiftReleased = true\n      this.shiftDir = -1\n      this.finesse++\n    } else if (keysDown & flags.moveRight && !(lastKeys & flags.moveRight)) {\n      this.shiftDelay = 0\n      this.arrDelay = 0\n      this.shiftReleased = true\n      this.shiftDir = 1\n      this.finesse++\n    }\n    // Shift key released event.\n    if (this.shiftDir === 1\n      && !(keysDown & flags.moveRight)\n      && lastKeys & flags.moveRight\n      && keysDown & flags.moveLeft) {\n      this.shiftDelay = 0\n      this.arrDelay = 0\n      this.shiftReleased = true\n      this.shiftDir = -1\n    } else if (this.shiftDir === -1\n      && !(keysDown & flags.moveLeft)\n      && lastKeys & flags.moveLeft\n      && keysDown & flags.moveRight) {\n      this.shiftDelay = 0\n      this.arrDelay = 0\n      this.shiftReleased = true\n      this.shiftDir = 1\n    } else if (!(keysDown & flags.moveRight)\n      && lastKeys & flags.moveRight\n      && keysDown & flags.moveLeft) {\n      this.shiftDir = -1\n    } else if (!(keysDown & flags.moveLeft)\n      && lastKeys & flags.moveLeft\n      && keysDown & flags.moveRight) {\n      this.shiftDir = 1\n    } else if ((!(keysDown & flags.moveLeft) && lastKeys & flags.moveLeft)\n      || (!(keysDown & flags.moveRight) && lastKeys & flags.moveRight)) {\n      this.shiftDelay = 0\n      this.arrDelay = 0\n      this.shiftReleased = true\n      this.shiftDir = 0\n    }\n    // Handle events\n    if (this.shiftDir) {\n      // 1. When key pressed instantly move over once.\n      if (this.shiftReleased) {\n        this.shift(this.shiftDir)\n        this.shiftDelay++\n        this.shiftReleased = false\n        // 2. Apply DAS delay\n      } else if (this.shiftDelay < settings.DAS) {\n        this.shiftDelay++\n        // 3. Once the delay is complete, move over once.\n        //     Increment delay so this doesn't run again.\n      } else if (this.shiftDelay === settings.DAS && settings.DAS !== 0) {\n        this.shift(this.shiftDir)\n        if (settings.ARR !== 0) this.shiftDelay++\n        // 4. Apply ARR delay\n      } else if (this.arrDelay < settings.ARR) {\n        this.arrDelay++\n        // 5. If ARR Delay is full, move piece, and reset delay and repeat.\n      } else if (this.arrDelay === settings.ARR && settings.ARR !== 0) {\n        this.shift(this.shiftDir)\n      }\n    }\n  }\n\n  shift(direction) {\n    this.arrDelay = 0\n    if (settings.ARR === 0 && this.shiftDelay === settings.DAS) {\n      for (let i = 1; i < 10; i++) {\n        if (!this.moveValid(i * direction, 0, this.tetro)) {\n          this.x += i * direction - direction\n          break\n        }\n      }\n    } else if (this.moveValid(direction, 0, this.tetro)) {\n      this.x += direction\n    }\n  }\n\n  shiftDown() {\n    if (this.moveValid(0, 1, this.tetro)) {\n      const grav = gravityArr[settings['Soft Drop'] + 1]\n      if (grav > 1) this.y += this.getDrop(grav)\n      else this.y += grav\n    }\n  }\n\n  hardDrop() {\n    this.y += this.getDrop(20)\n    this.lockDelay = settings['Lock Delay']\n  }\n\n  getDrop(distance) {\n    let i\n    for (i = 1; i <= distance; i++) {\n      if (!this.moveValid(0, i, this.tetro)) return i - 1\n    }\n    return i - 1\n  }\n\n  hold() {\n    const temp = hold.piece\n    if (!this.held) {\n      if (hold.piece !== undefined) {\n        hold.piece = this.index\n        this.new(temp)\n      } else {\n        hold.piece = this.index\n        this.new(preview.next())\n      }\n      this.held = true\n      hold.draw()\n    }\n  }\n\n  /**\n   * Checks if position and orientation passed is valid.\n   *  We call it for every action instead of only once a frame in case one\n   *  of the actions is still valid, we don't want to block it.\n   */\n  moveValid(cx, cy, tetro) {\n    cx = cx + this.x\n    cy = Math.floor(cy + this.y)\n\n    for (let x = 0; x < tetro.length; x++) {\n      for (let y = 0; y < tetro[x].length; y++) {\n        if (tetro[x][y]\n          && (cx + x < 0\n            || cx + x >= 10\n            || cy + y >= 22\n            || stack.grid[cx + x][cy + y])) {\n          return false\n        }\n      }\n    }\n    this.lockDelay = 0\n    return true\n  }\n\n  update() {\n    if (this.moveValid(0, 1, this.tetro)) {\n      state.landed = false\n      if (settings.Gravity) {\n        const grav = gravityArr[settings.Gravity - 1]\n        if (grav > 1) this.y += this.getDrop(grav)\n        else this.y += grav\n      } else {\n        this.y += gravity\n      }\n    } else {\n      state.landed = true\n      this.y = Math.floor(this.y)\n      if (this.lockDelay >= settings['Lock Delay']) {\n        stack.addPiece(this.tetro)\n        this.new(preview.next())\n      } else {\n        const a = 1 / setting['Lock Delay'][settings['Lock Delay']]\n        activeCtx.globalCompositeOperation = 'source-atop'\n        activeCtx.fillStyle = 'rgba(0,0,0,0)' // ' + a + ' // Prevent fade in/out effect\n        activeCtx.fillRect(0, 0, activeCanvas.width, activeCanvas.height)\n        activeCtx.globalCompositeOperation = 'source-over'\n        this.lockDelay++\n      }\n    }\n  }\n\n  draw() {\n    draw(this.tetro, this.x, this.y, activeCtx)\n  }\n\n  drawGhost() {\n\n    if (!settings.Ghost && !state.landed) {\n      draw(this.tetro, this.x, this.y + this.getDrop(22), activeCtx, 0)\n    } else if (settings.Ghost === 1 && !state.landed) {\n      activeCtx.globalAlpha = 0.3\n      draw(this.tetro, this.x, this.y + this.getDrop(22), activeCtx)\n      activeCtx.globalAlpha = 1\n    }\n  }\n}\n\nexport const piece = new Piece()\n", "import { finesse, state, statsPiece, gametype, statsLines, lineLimit, stackCtx, stackCanvas, msd, init } from './tetris'\nimport { clear, draw } from './utils'\nimport { piece } from './piece'\nimport { menu } from './menu'\nimport { settings } from './settings'\n\nfunction Stack() {\n  // this.grid;\n}\n/**\n * Creates a matrix for the playfield.\n */\nStack.prototype.new = function (x, y) {\n  const cells = new Array(x)\n  for (let i = 0; i < x; i++) {\n    cells[i] = new Array(y)\n  }\n  this.grid = cells\n}\n/**\n * Adds tetro to the stack, and clears lines if they fill up.\n */\nStack.prototype.addPiece = function (tetro) {\n  let once = false\n\n  // Add the piece to the stack.\n  let range = []\n  let valid = false\n  for (let x = 0; x < tetro.length; x++) {\n    for (let y = 0; y < tetro[x].length; y++) {\n      if (tetro[x][y]) {\n        this.grid[x + piece.x][y + piece.y] = tetro[x][y]\n        // Get column for finesse\n        if (!once || x + piece.x < state.column) {\n          state.column = x + piece.x\n          once = true\n        }\n        // Check which lines get modified\n        if (range.indexOf(y + piece.y) === -1) {\n          range.push(y + piece.y)\n          // This checks if any cell is in the play field. If there\n          //  isn't any this is called a lock out and the game ends.\n          if (y + piece.y > 1) valid = true\n        }\n      }\n    }\n  }\n\n  // Lock out - Similar to ./piece block out\n  if (!valid) {\n    state.gameState = 9\n    msg.innerHTML = 'GAME OVER'\n    menu(3)\n    // setTimeout(() => init(0), 3000)\n    return\n  }\n\n  // Check modified lines for full lines.\n  range = range.sort(function (a, b) {\n    return a - b\n  })\n  for (let row = range[0], len = row + range.length; row < len; row++) {\n    let count = 0\n    for (let x = 0; x < 10; x++) {\n      if (this.grid[x][row]) count++\n    }\n\n    // Clear the line. This basically just moves down the stack.\n    // TODO Ponder during the day and see if there is a more elegant solution.\n    if (count === 10) {\n\n      state.lines++ // NOTE stats\n\n      if (gametype === 3) {\n        if (state.digLines.indexOf(row) !== -1) {\n          state.digLines.splice(state.digLines.indexOf(row), 1)\n        }\n      }\n      for (let y = row; y >= -1; y--) {\n        for (let x = 0; x < 10; x++) {\n          this.grid[x][y] = this.grid[x][y - 1]\n        }\n      }\n    }\n  }\n\n  state.finesse += piece.finesse - finesse[piece.index][piece.pos][state.column]\n\n  state.piecesSet++ // NOTE Stats\n\n  // TODO Might not need this (same for in init)\n  state.column = 0\n\n  statsPiece.innerHTML = state.piecesSet\n\n  if (gametype !== 3) statsLines.innerHTML = lineLimit - state.lines\n  else statsLines.innerHTML = state.digLines.length\n\n  this.draw()\n}\n\n/**\n * Draws the stack.\n */\nStack.prototype.draw = function () {\n  clear(stackCtx)\n  draw(this.grid, 0, 0, stackCtx)\n\n  // Darken Stack\n  // TODO wrap this with an option.\n  // stackCtx.globalCompositeOperation = 'source-atop'\n  // stackCtx.fillStyle = 'rgba(0,0,0,0.3)'\n  // stackCtx.fillRect(0, 0, stackCanvas.width, stackCanvas.height)\n  // stackCtx.globalCompositeOperation = 'source-over'\n\n  if (settings.Outline) {\n    const b = ~~(state.cellSize / 8)\n    const c = state.cellSize\n    const lineCanvas = document.createElement('canvas')\n    lineCanvas.width = stackCanvas.width\n    lineCanvas.height = stackCanvas.height\n    const lineCtx = lineCanvas.getContext('2d')\n    lineCtx.fillStyle = 'rgba(255,255,255,0.5)'\n    lineCtx.beginPath()\n    for (let x = 0, len = this.grid.length; x < len; x++) {\n      for (let y = 0, wid = this.grid[x].length; y < wid; y++) {\n        if (this.grid[x][y]) {\n          if (x < 9 && !this.grid[x + 1][y]) {\n            lineCtx.fillRect(x * c + c - b, y * c - 2 * c, b, c)\n          }\n          if (x > 0 && !this.grid[x - 1][y]) {\n            lineCtx.fillRect(x * c, y * c - 2 * c, b, c)\n          }\n          if (y < 21 && !this.grid[x][y + 1]) {\n            lineCtx.fillRect(x * c, y * c - 2 * c + c - b, c, b)\n          }\n          if (!this.grid[x][y - 1]) {\n            lineCtx.fillRect(x * c, y * c - 2 * c, c, b)\n          }\n          // Diags\n          if (x < 9 && y < 21) {\n            if (!this.grid[x + 1][y] && !this.grid[x][y + 1]) {\n              lineCtx.clearRect(x * c + c - b, y * c - 2 * c + c - b, b, b)\n              lineCtx.fillRect(x * c + c - b, y * c - 2 * c + c - b, b, b)\n            } else if (\n              !this.grid[x + 1][y + 1]\n              && this.grid[x + 1][y]\n              && this.grid[x][y + 1]\n            ) {\n              lineCtx.moveTo(x * c + c, y * c - 2 * c + c - b)\n              lineCtx.lineTo(x * c + c, y * c - 2 * c + c)\n              lineCtx.lineTo(x * c + c - b, y * c - 2 * c + c)\n              lineCtx.arc(\n                x * c + c,\n                y * c - 2 * c + c,\n                b,\n                (3 * Math.PI) / 2,\n                Math.PI,\n                true,\n              )\n            }\n          }\n          if (x < 9) {\n            if (!this.grid[x + 1][y] && !this.grid[x][y - 1]) {\n              lineCtx.clearRect(x * c + c - b, y * c - 2 * c, b, b)\n              lineCtx.fillRect(x * c + c - b, y * c - 2 * c, b, b)\n            } else if (\n              !this.grid[x + 1][y - 1]\n              && this.grid[x + 1][y]\n              && this.grid[x][y - 1]\n            ) {\n              lineCtx.moveTo(x * c + c - b, y * c - 2 * c)\n              lineCtx.lineTo(x * c + c, y * c - 2 * c)\n              lineCtx.lineTo(x * c + c, y * c - 2 * c + b)\n              lineCtx.arc(\n                x * c + c,\n                y * c - 2 * c,\n                b,\n                Math.PI / 2,\n                Math.PI,\n                false,\n              )\n            }\n          }\n          if (x > 0 && y < 21) {\n            if (!this.grid[x - 1][y] && !this.grid[x][y + 1]) {\n              lineCtx.clearRect(x * c, y * c - 2 * c + c - b, b, b)\n              lineCtx.fillRect(x * c, y * c - 2 * c + c - b, b, b)\n            } else if (\n              !this.grid[x - 1][y + 1]\n              && this.grid[x - 1][y]\n              && this.grid[x][y + 1]\n            ) {\n              lineCtx.moveTo(x * c, y * c - 2 * c + c - b)\n              lineCtx.lineTo(x * c, y * c - 2 * c + c)\n              lineCtx.lineTo(x * c + b, y * c - 2 * c + c)\n              lineCtx.arc(\n                x * c,\n                y * c - 2 * c + c,\n                b,\n                Math.PI * 2,\n                (3 * Math.PI) / 2,\n                true,\n              )\n            }\n          }\n          if (x > 0) {\n            if (!this.grid[x - 1][y] && !this.grid[x][y - 1]) {\n              lineCtx.clearRect(x * c, y * c - 2 * c, b, b)\n              lineCtx.fillRect(x * c, y * c - 2 * c, b, b)\n            } else if (\n              !this.grid[x - 1][y - 1]\n              && this.grid[x - 1][y]\n              && this.grid[x][y - 1]\n            ) {\n              lineCtx.moveTo(x * c + b, y * c - 2 * c)\n              lineCtx.lineTo(x * c, y * c - 2 * c)\n              lineCtx.lineTo(x * c, y * c - 2 * c + b)\n              lineCtx.arc(\n                x * c,\n                y * c - 2 * c,\n                b,\n                Math.PI / 2,\n                Math.PI * 2,\n                true,\n              )\n            }\n          }\n        }\n      }\n    }\n    lineCtx.fill()\n    stackCtx.drawImage(lineCanvas, 0, 0)\n  }\n}\n\nexport const stack = new Stack()\n", "\n/**\n * Get html elements.\n */\nexport const msg = document.getElementById('msg')\nexport const statsEl = document.getElementById('stats')\n// const statsTime = document.getElementById('time')\n\nexport const statsLines = document.getElementById('line')\nexport const statsPiece = document.getElementById('piece')\n\nexport const h3 = document.getElementsByTagName('h3')\n\n// Get canvases and contexts\nexport const holdCanvas = document.getElementById('hold')\nexport const bgStackCanvas = document.getElementById('bgStack')\nexport const stackCanvas = document.getElementById('stack')\n\nexport const activeCanvas = document.getElementById('active')\nexport const previewCanvas = document.getElementById('preview')\n\nexport const spriteCanvas = document.getElementById('sprite')\n\nexport const holdCtx = holdCanvas.getContext('2d')\nexport const bgStackCtx = bgStackCanvas.getContext('2d')\n\nexport const stackCtx = stackCanvas.getContext('2d')\n\nexport const activeCtx = activeCanvas.getContext('2d')\nexport const previewCtx = previewCanvas.getContext('2d')\nexport const spriteCtx = spriteCanvas.getContext('2d')\n", "import { clear, rng } from './utils'\nimport { stack } from './stack'\nimport { preview } from './preview'\nimport { menu } from './menu'\nimport { settings } from './settings'\nimport { piece } from './piece'\nimport { hold } from './hold'\nimport {\n  msg,\n  statsEl,\n  // statsTime,\n\n  statsLines,\n  statsPiece,\n\n  h3,\n\n  // Get canvases and contexts\n  holdCanvas,\n  bgStackCanvas,\n  stackCanvas,\n\n  activeCanvas,\n  previewCanvas,\n\n  spriteCanvas,\n\n  holdCtx,\n  bgStackCtx,\n\n  stackCtx,\n\n  activeCtx,\n  previewCtx,\n  spriteCtx,\n\n} from './elements'\n\nexport * from './settings'\nexport * from './menu'\nexport * from './elements'\n\n\n/**\n * Piece data\n */\n\n// NOTE y values are inverted since our matrix counts from top to bottom.\nconst kickData = [\n  [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]],\n  [[0, 0], [1, 0], [1, 1], [0, -2], [1, -2]],\n  [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]],\n  [[0, 0], [-1, 0], [-1, 1], [0, -2], [-1, -2]],\n]\nconst kickDataI = [\n  [[0, 0], [-1, 0], [2, 0], [-1, 0], [2, 0]],\n  [[-1, 0], [0, 0], [0, 0], [0, -1], [0, 2]],\n  [[-1, -1], [1, -1], [-2, -1], [1, 0], [-2, 0]],\n  [[0, -1], [0, -1], [0, -1], [0, 1], [0, -2]],\n]\n// TODO get rid of this lol.\nconst kickDataO = [[[0, 0]], [[0, 0]], [[0, 0]], [[0, 0]]]\n\n// Define shapes and spawns.\nconst PieceI = {\n  index: 0,\n  x: 2,\n  y: -1,\n  kickData: kickDataI,\n  tetro: [\n    [0, 0, 0, 0, 0],\n    [0, 0, 1, 0, 0],\n    [0, 0, 1, 0, 0],\n    [0, 0, 1, 0, 0],\n    [0, 0, 1, 0, 0],\n  ],\n}\nconst PieceJ = {\n  index: 1,\n  x: 3,\n  y: 0,\n  kickData,\n  tetro: [[2, 2, 0], [0, 2, 0], [0, 2, 0]],\n}\nconst PieceL = {\n  index: 2,\n  x: 3,\n  y: 0,\n  kickData,\n  tetro: [[0, 3, 0], [0, 3, 0], [3, 3, 0]],\n}\nconst PieceO = {\n  index: 3,\n  x: 4,\n  y: 0,\n  kickData: kickDataO,\n  tetro: [[4, 4], [4, 4]],\n}\nconst PieceS = {\n  index: 4,\n  x: 3,\n  y: 0,\n  kickData,\n  tetro: [[0, 5, 0], [5, 5, 0], [5, 0, 0]],\n}\nconst PieceT = {\n  index: 5,\n  x: 3,\n  y: 0,\n  kickData,\n  tetro: [[0, 6, 0], [6, 6, 0], [0, 6, 0]],\n}\nconst PieceZ = {\n  index: 6,\n  x: 3,\n  y: 0,\n  kickData,\n  tetro: [[7, 0, 0], [7, 7, 0], [0, 7, 0]],\n}\n\nexport const pieces = [PieceI, PieceJ, PieceL, PieceO, PieceS, PieceT, PieceZ]\n\n// Finesse data\n// index x orientatio x state.column = finesse\n// finesse[0][0][4] = 1\n// TODO double check these.\nexport const finesse = [\n  [\n    [1, 2, 1, 0, 1, 2, 1],\n    [2, 2, 2, 2, 1, 1, 2, 2, 2, 2],\n    [1, 2, 1, 0, 1, 2, 1],\n    [2, 2, 2, 2, 1, 1, 2, 2, 2, 2],\n  ],\n  [\n    [1, 2, 1, 0, 1, 2, 2, 1],\n    [2, 2, 3, 2, 1, 2, 3, 3, 2],\n    [2, 3, 2, 1, 2, 3, 3, 2],\n    [2, 3, 2, 1, 2, 3, 3, 2, 2],\n  ],\n  [\n    [1, 2, 1, 0, 1, 2, 2, 1],\n    [2, 2, 3, 2, 1, 2, 3, 3, 2],\n    [2, 3, 2, 1, 2, 3, 3, 2],\n    [2, 3, 2, 1, 2, 3, 3, 2, 2],\n  ],\n  [\n    [1, 2, 2, 1, 0, 1, 2, 2, 1],\n    [1, 2, 2, 1, 0, 1, 2, 2, 1],\n    [1, 2, 2, 1, 0, 1, 2, 2, 1],\n    [1, 2, 2, 1, 0, 1, 2, 2, 1],\n  ],\n  [\n    [1, 2, 1, 0, 1, 2, 2, 1],\n    [2, 2, 2, 1, 1, 2, 3, 2, 2],\n    [1, 2, 1, 0, 1, 2, 2, 1],\n    [2, 2, 2, 1, 1, 2, 3, 2, 2],\n  ],\n  [\n    [1, 2, 1, 0, 1, 2, 2, 1],\n    [2, 2, 3, 2, 1, 2, 3, 3, 2],\n    [2, 3, 2, 1, 2, 3, 3, 2],\n    [2, 3, 2, 1, 2, 3, 3, 2, 2],\n  ],\n  [\n    [1, 2, 1, 0, 1, 2, 2, 1],\n    [2, 2, 2, 1, 1, 2, 3, 2, 2],\n    [1, 2, 1, 0, 1, 2, 2, 1],\n    [2, 2, 2, 1, 1, 2, 3, 2, 2],\n  ],\n]\n\n/**\n * Gameplay specific vars.\n */\n\nexport const state = {\n\n  /**\n   * Playfield.\n   */\n  cellSize: undefined,\n  column: undefined,\n\n  // Consolidate shared variables\n\n  finesse: undefined,\n  lines: undefined,\n  piecesSet: undefined,\n\n  startPauseTime: undefined,\n  pauseTime: undefined,\n\n\n  lastX: undefined,\n  lastY: undefined,\n  lastPos: undefined,\n  landed: undefined,\n\n  /**\n   * 0 = Normal\n   * 1 = win\n   * 2 = countdown\n   * 3 = game not played\n   * 9 = loss\n   */\n  gameState: 3,\n\n  paused: false,\n\n  startTime: undefined,\n  digLines: undefined,\n\n  released: undefined,\n}\n\n\nconst gravityUnit = 0.00390625\n\nexport let gravity\n\nexport const gravityArr = (function () {\n  const array = []\n  array.push(0)\n  for (let i = 1; i < 64; i++) array.push(i / 64)\n  for (let i = 1; i <= 20; i++) array.push(i)\n  return array\n})()\n\nlet frame\n\n/**\n *Pausing variables\n */\n\nexport let lineLimit\n\nlet replayKeys\nlet watchingReplay = false\nlet toGreyRow\n\nexport let gametype\n\n// TODO Make dirty flags for each canvas, draw them all at once during frame call.\n// let dirtyHold, dirtyActive, dirtyStack, dirtyPreview;\n\n\n// Stats\n\n\n// Keys\nexport let keysDown\nexport let lastKeys\n\nexport const binds = {\n  pause: 27,\n  moveLeft: 37,\n  moveRight: 39,\n  moveDown: 40,\n  moveUp: 38, // Added arrow up to alias rotate right\n  hardDrop: 32,\n  holdPiece: 67,\n  rotRight: 88,\n  rotLeft: 90,\n  rot180: 16,\n  retry: 81, // R (82) -> Q (81)\n}\n\nexport const flags = {\n  hardDrop: 1,\n  moveRight: 2,\n  moveLeft: 4,\n  moveDown: 8,\n  holdPiece: 16,\n  rotRight: 32,\n  rotLeft: 64,\n  rot180: 128,\n}\n\nexport function resize() {\n  const a = document.getElementById('a')\n  const b = document.getElementById('b')\n  const c = document.getElementById('c')\n  const content = document.getElementById('content')\n\n  // TODO Finalize this.\n  // Aspect ratio: 1.024\n  let screenHeight = window.innerHeight - 34\n  const screenWidth = ~~(screenHeight * 1.024)\n  if (screenWidth > window.innerWidth) { screenHeight = ~~(window.innerWidth / 1.024) }\n\n  if (settings.Size === 1 && screenHeight > 602) state.cellSize = 15\n  else if (settings.Size === 2 && screenHeight > 602) state.cellSize = 30\n  else if (settings.Size === 3 && screenHeight > 902) state.cellSize = 45\n  else state.cellSize = Math.max(~~(screenHeight / 20), 10)\n\n  const { cellSize } = state\n\n  const pad = (window.innerHeight - (cellSize * 20 + 2)) / 2 + 'px'\n  content.style.padding = pad + ' 0'\n  statsEl.style.bottom = pad\n\n  // Size elements\n  a.style.padding = '0 0.5rem ' + ~~(cellSize / 2) + 'px'\n\n  stackCanvas.width = activeCanvas.width = bgStackCanvas.width = cellSize * 10\n  stackCanvas.height = activeCanvas.height = bgStackCanvas.height =\n    cellSize * 20\n  b.style.width = stackCanvas.width + 'px'\n  b.style.height = stackCanvas.height + 'px'\n\n  holdCanvas.width = cellSize * 4\n  holdCanvas.height = cellSize * 2\n  a.style.width = holdCanvas.width + 'px'\n  a.style.height = holdCanvas.height + 'px'\n\n  previewCanvas.width = cellSize * 4\n  previewCanvas.height = stackCanvas.height\n  c.style.width = previewCanvas.width + 'px'\n  c.style.height = b.style.height\n\n  // Scale the text so it fits in the thing.\n  // TODO get rid of extra font sizes here.\n  msg.style.lineHeight = b.style.height\n  msg.style.fontSize = ~~(stackCanvas.width / 10) + 'px'\n  statsEl.style.fontSize = ~~(stackCanvas.width / 11) + 'px'\n  document.documentElement.style.fontSize = ~~(stackCanvas.width / 16) + 'px'\n\n  statsEl.style.width = a.style.width\n  for (let i = 0, len = h3.length; i < len; i++) {\n    h3[i].style.lineHeight = a.style.height\n    h3[i].style.fontSize = statsEl.style.fontSize\n  }\n\n  // Redraw graphics\n  makeSprite()\n\n  if (settings.Grid === 1) bg(bgStackCtx)\n\n  if (state.gameState === 0) {\n    piece.drawGhost()\n    piece.draw()\n    stack.draw()\n    preview.draw()\n    if (hold.piece) {\n      hold.draw()\n    }\n  }\n}\naddEventListener('resize', resize, false)\n\n/**\n * ========================== Model ===========================================\n */\n\n/**\n * Resets all the settings and starts the game.\n */\nexport function init(gt) {\n  if (gt === 'replay') {\n    watchingReplay = true\n  } else {\n    watchingReplay = false\n    replayKeys = {}\n    // TODO Make new seed and rng method.\n    replayKeys.seed = ~~(Math.random() * 2147483645) + 1\n    gametype = gt\n  }\n\n  lineLimit = 40\n\n  // Reset\n  state.column = 0\n  keysDown = 0\n  lastKeys = 0\n\n  state.released = 255\n\n  // TODO Check if needed.\n  piece.shiftDir = 0\n  piece.shiftReleased = true\n\n  state.startPauseTime = 0\n  state.pauseTime = 0\n  state.paused = false\n\n  rng.seed = replayKeys.seed\n  toGreyRow = 21\n  frame = 0\n  state.lastPos = 'reset'\n  stack.new(10, 22)\n  hold.piece = undefined\n  if (settings.Gravity === 0) gravity = gravityUnit * 4\n  state.startTime = Date.now()\n\n  preview.init()\n  // preview.draw();\n\n  state.finesse = 0\n  state.lines = 0\n  state.piecesSet = 0\n\n  statsPiece.innerHTML = state.piecesSet\n  statsLines.innerHTML = lineLimit - state.lines\n  statistics()\n  clear(stackCtx)\n  clear(activeCtx)\n  clear(holdCtx)\n\n  if (gametype === 3) {\n\n    // Dig Race\n    // make ten random numbers, make sure next isn't the same as last?\n    // TODO make into function or own file.\n\n    state.digLines = [12, 13, 14, 15, 16, 17, 18, 19, 20, 21]\n\n    statsLines.innerHTML = 10\n    statsLines.innerHTML = 10\n    const randomNums = []\n    for (let i = 0; i < 10; i++) {\n      const random = ~~(rng.next() * 10)\n      if (random !== randomNums[i - 1]) randomNums.push(random)\n      else i--\n    }\n    for (let y = 21; y > 11; y--) {\n      for (let x = 0; x < 10; x++) {\n        if (randomNums[y - 12] !== x) stack.grid[x][y] = 8\n      }\n    }\n    stack.draw()\n  }\n\n  menu()\n\n  // Only start a loop if one is not running already.\n  if (state.gameState === 3) {\n    state.gameState = 2\n    gameLoop()\n  } else {\n    state.gameState = 2\n  }\n}\n\nexport function pause() {\n  if (state.gameState === 0) {\n    state.paused = true\n    state.startPauseTime = Date.now()\n    msg.innerHTML = 'PAUSED'\n    menu(4)\n  }\n}\n\nexport function unpause() {\n  state.paused = false\n  state.pauseTime += Date.now() - state.startPauseTime\n  msg.innerHTML = ''\n  menu()\n}\n\n/**\n * Draws the stats next to the tetrion.\n */\nfunction statistics() {\n\n  // let time = Date.now() - state.startTime - state.pauseTime;\n  // let seconds = ((time / 1000) % 60).toFixed(2);\n  // let minutes = ~~(time / 60000);\n  // statsTime.innerHTML =\n  //   (minutes < 10 ? '0' : '') + minutes + (seconds < 10 ? ':0' : ':') + seconds;\n}\n\n// ========================== View ============================================\n\n/**\n * Draws grid in background.\n */\nfunction bg(ctx) {\n\n  ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height)\n  ctx.fillStyle = '#343434' // 1c1c1c\n  for (let x = -1; x < ctx.canvas.width + 1; x += state.cellSize) {\n    ctx.fillRect(x, 0, 2, ctx.canvas.height)\n  }\n\n  for (let y = -1; y < ctx.canvas.height + 1; y += state.cellSize) {\n    ctx.fillRect(0, y, ctx.canvas.width, 2)\n  }\n}\n\n/**\n * Pre-renders all mino types in all colors.\n */\nfunction makeSprite() {\n\n  const shaded = [\n    // 0         +10        -10        -20\n    ['#c1c1c1', '#dddddd', '#a6a6a6', '#8b8b8b'],\n    ['#25bb9b', '#4cd7b6', '#009f81', '#008568'],\n    ['#3397d9', '#57b1f6', '#007dbd', '#0064a2'],\n    ['#e67e23', '#ff993f', '#c86400', '#a94b00'],\n    ['#efc30f', '#ffdf3a', '#d1a800', '#b38e00'],\n    ['#9ccd38', '#b9e955', '#81b214', '#659700'],\n    ['#9c5ab8', '#b873d4', '#81409d', '#672782'],\n    ['#e64b3c', '#ff6853', '#c62c25', '#a70010'],\n    ['#898989', '#a3a3a3', '#6f6f6f', '#575757'],\n  ]\n\n  const glossy = [\n    // 25         37         52         -21        -45\n    ['#ffffff', '#ffffff', '#ffffff', '#888888', '#4d4d4d'],\n    ['#7bffdf', '#9fffff', '#ccffff', '#008165', '#00442e'],\n    ['#6cdcff', '#93feff', '#c2ffff', '#00629f', '#002c60'],\n    ['#ffc166', '#ffe386', '#ffffb0', '#aa4800', '#650500'],\n    ['#ffff6a', '#ffff8c', '#ffffb8', '#b68a00', '#714f00'],\n    ['#efff81', '#ffffa2', '#ffffcd', '#6b9200', '#2c5600'],\n    ['#dc9dfe', '#ffbeff', '#ffe9ff', '#5d287e', '#210043'],\n    ['#ff9277', '#ffb497', '#ffe0bf', '#a7000a', '#600000'],\n    ['#cbcbcb', '#ededed', '#ffffff', '#545454', '#1f1f1f'],\n  ]\n\n  // https://en.wikipedia.org/wiki/Tetris:_The_Grand_Master\n  let tgm = [\n    ['#7b7b7b', '#303030', '#6b6b6b', '#363636'],\n    ['#f08000', '#a00000', '#e86008', '#b00000'],\n    ['#00a8f8', '#0000b0', '#0090e8', '#0020c0'],\n    ['#f8a800', '#b84000', '#e89800', '#c85800'],\n    ['#e8e000', '#886800', '#d8c800', '#907800'],\n    ['#f828f8', '#780078', '#e020e0', '#880088'],\n    ['#00e8f0', '#0070a0', '#00d0e0', '#0080a8'],\n    ['#78f800', '#007800', '#58e000', '#008800'],\n    ['#7b7b7b', '#303030', '#6b6b6b', '#363636'],\n  ]\n\n  const world = []\n\n  world[0] = tgm[0]\n  world[1] = tgm[6]\n  world[2] = tgm[2]\n  world[3] = tgm[3]\n  world[4] = tgm[4]\n  world[5] = tgm[7]\n  world[6] = tgm[5]\n  world[7] = tgm[1]\n  world[8] = tgm[8]\n\n  const { cellSize } = state\n\n  spriteCanvas.width = cellSize * 9\n  spriteCanvas.height = cellSize\n  for (let i = 0; i < 9; i++) {\n    const x = i * cellSize\n    if (settings.Block === 0) {\n      // Shaded\n      spriteCtx.fillStyle = shaded[i][1]\n      spriteCtx.fillRect(x, 0, cellSize, cellSize)\n\n      spriteCtx.fillStyle = shaded[i][3]\n      spriteCtx.fillRect(x, cellSize / 2, cellSize, cellSize / 2)\n\n      spriteCtx.fillStyle = shaded[i][0]\n      spriteCtx.beginPath()\n      spriteCtx.moveTo(x, 0)\n      spriteCtx.lineTo(x + cellSize / 2, cellSize / 2)\n      spriteCtx.lineTo(x, cellSize)\n      spriteCtx.fill()\n\n      spriteCtx.fillStyle = shaded[i][2]\n      spriteCtx.beginPath()\n      spriteCtx.moveTo(x + cellSize, 0)\n      spriteCtx.lineTo(x + cellSize / 2, cellSize / 2)\n      spriteCtx.lineTo(x + cellSize, cellSize)\n      spriteCtx.fill()\n    } else if (settings.Block === 1) {\n\n      // Flat\n      spriteCtx.fillStyle = shaded[i][0]\n      spriteCtx.fillRect(x, 0, cellSize, cellSize)\n\n    } else if (settings.Block === 2) {\n      // Glossy\n      const k = Math.max(~~(cellSize * 0.083), 1)\n\n      let grad = spriteCtx.createLinearGradient(x, 0, x + cellSize, cellSize)\n      grad.addColorStop(0.5, glossy[i][3])\n      grad.addColorStop(1, glossy[i][4])\n      spriteCtx.fillStyle = grad\n      spriteCtx.fillRect(x, 0, cellSize, cellSize)\n\n      grad = spriteCtx.createLinearGradient(x, 0, x + cellSize, cellSize)\n      grad.addColorStop(0, glossy[i][2])\n      grad.addColorStop(0.5, glossy[i][1])\n      spriteCtx.fillStyle = grad\n      spriteCtx.fillRect(x, 0, cellSize - k, cellSize - k)\n\n      grad = spriteCtx.createLinearGradient(\n        x + k,\n        k,\n        x + cellSize - k,\n        cellSize - k,\n      )\n      grad.addColorStop(0, shaded[i][0])\n      grad.addColorStop(0.5, glossy[i][0])\n      grad.addColorStop(0.5, shaded[i][0])\n      grad.addColorStop(1, glossy[i][0])\n      spriteCtx.fillStyle = grad\n      spriteCtx.fillRect(x + k, k, cellSize - k * 2, cellSize - k * 2)\n    } else if (settings.Block === 3 || settings.Block === 4) {\n      // Arika\n\n      // World\n      if (settings.Block === 4) tgm = world\n\n      const k = Math.max(~~(cellSize * 0.125), 1)\n\n      spriteCtx.fillStyle = tgm[i][1]\n      spriteCtx.fillRect(x, 0, cellSize, cellSize)\n      spriteCtx.fillStyle = tgm[i][0]\n      spriteCtx.fillRect(x, 0, cellSize, ~~(cellSize / 2))\n\n      let grad = spriteCtx.createLinearGradient(x, k, x, cellSize - k)\n      grad.addColorStop(0, tgm[i][2])\n      grad.addColorStop(1, tgm[i][3])\n      spriteCtx.fillStyle = grad\n      spriteCtx.fillRect(x + k, k, cellSize - k * 2, cellSize - k * 2)\n\n      grad = spriteCtx.createLinearGradient(x, k, x, cellSize)\n      grad.addColorStop(0, tgm[i][0])\n      grad.addColorStop(1, tgm[i][3])\n      spriteCtx.fillStyle = grad\n      spriteCtx.fillRect(x, k, k, cellSize - k)\n\n      grad = spriteCtx.createLinearGradient(x, 0, x, cellSize - k)\n      grad.addColorStop(0, tgm[i][2])\n      grad.addColorStop(1, tgm[i][1])\n      spriteCtx.fillStyle = grad\n      spriteCtx.fillRect(x + cellSize - k, 0, k, cellSize - k)\n    }\n  }\n}\n\n// ========================== Controller ======================================\n\naddEventListener(\n  'keydown',\n  function (e) {\n\n    // TODO send to menu or game depending on context.\n    if ([32, 37, 38, 39, 40].indexOf(e.keyCode) !== -1) e.preventDefault()\n\n    // TODO if active, prevent default for binded keys\n    // if (bindsArr.indexOf(e.keyCode) !== -1)\n    //  e.preventDefault();\n\n    if (e.keyCode === binds.pause) {\n      if (state.paused) {\n        unpause()\n      } else {\n        pause()\n      }\n    }\n    if (e.keyCode === binds.retry) {\n      init(gametype)\n    }\n    if (!watchingReplay) {\n      if (e.keyCode === binds.moveLeft) {\n        keysDown |= flags.moveLeft\n        // piece.finesse++\n      } else if (e.keyCode === binds.moveRight) {\n        keysDown |= flags.moveRight\n      } else if (e.keyCode === binds.moveDown) {\n        keysDown |= flags.moveDown\n      } else if (e.keyCode === binds.hardDrop) {\n        keysDown |= flags.hardDrop\n      } else if (e.keyCode === binds.rotRight || e.keyCode === binds.moveUp) {\n        keysDown |= flags.rotRight\n      } else if (e.keyCode === binds.rotLeft) {\n        keysDown |= flags.rotLeft\n      } else if (e.keyCode === binds.rot180) {\n        keysDown |= flags.rot180\n      } else if (e.keyCode === binds.holdPiece) {\n        keysDown |= flags.holdPiece\n      }\n    }\n  },\n  false,\n)\naddEventListener(\n  'keyup',\n  function (e) {\n    if (!watchingReplay) {\n\n      // Game over screen: Shortcut to play again\n      if (state.gameState === 9 && e.keyCode === 13) {\n        // Enter\n        init(state.gametype)\n      }\n\n      if (e.keyCode === binds.moveLeft && keysDown & flags.moveLeft) {\n        keysDown ^= flags.moveLeft\n      } else if (e.keyCode === binds.moveRight && keysDown & flags.moveRight) {\n        keysDown ^= flags.moveRight\n      } else if (e.keyCode === binds.moveDown && keysDown & flags.moveDown) {\n        keysDown ^= flags.moveDown\n      } else if (e.keyCode === binds.hardDrop && keysDown & flags.hardDrop) {\n        keysDown ^= flags.hardDrop\n      } else if ((e.keyCode === binds.rotRight || e.keyCode === binds.moveUp) && keysDown & flags.rotRight) {\n        keysDown ^= flags.rotRight\n      } else if (e.keyCode === binds.rotLeft && keysDown & flags.rotLeft) {\n        keysDown ^= flags.rotLeft\n      } else if (e.keyCode === binds.rot180 && keysDown & flags.rot180) {\n        keysDown ^= flags.rot180\n      } else if (e.keyCode === binds.holdPiece && keysDown & flags.holdPiece) {\n        keysDown ^= flags.holdPiece\n      }\n    }\n  },\n  false,\n)\n\n// ========================== Loop ============================================\n\n/**\n * Runs every frame.\n */\nfunction update() {\n\n  // TODO Das preservation broken.\n  if (lastKeys !== keysDown && !watchingReplay) {\n    replayKeys[frame] = keysDown\n  } else if (frame in replayKeys) {\n    keysDown = replayKeys[frame]\n  }\n\n  if (!(lastKeys & flags.holdPiece) && flags.holdPiece & keysDown) {\n    piece.hold()\n  }\n\n  if (flags.rotLeft & keysDown && !(lastKeys & flags.rotLeft)) {\n    piece.rotate(-1)\n    piece.finesse++\n  } else if (flags.rotRight & keysDown && !(lastKeys & flags.rotRight)) {\n    piece.rotate(1)\n    piece.finesse++\n  } else if (flags.rot180 & keysDown && !(lastKeys & flags.rot180)) {\n    piece.rotate(1)\n    piece.rotate(1)\n    piece.finesse++\n  }\n\n  piece.checkShift()\n\n  if (flags.moveDown & keysDown) {\n    piece.shiftDown()\n    // piece.finesse++;\n  }\n  if (!(lastKeys & flags.hardDrop) && flags.hardDrop & keysDown) {\n    piece.hardDrop()\n  }\n\n  piece.update()\n\n  // Win\n  if (gametype !== 3) {\n    if (state.lines >= lineLimit) {\n      state.gameState = 1\n      msg.innerHTML = 'GREAT!'\n      menu(3)\n    }\n  } else {\n    if (state.digLines.length === 0) {\n      state.gameState = 1\n      msg.innerHTML = 'GREAT!'\n      menu(3)\n    }\n  }\n\n  statistics()\n\n  if (lastKeys !== keysDown) {\n    lastKeys = keysDown\n  }\n}\n\n\n\n/**\n * Shim.\n *\nwindow.requestAnimFrame = (function () {\n  return (\n    window.requestAnimationFrame\n    || window.mozRequestAnimationFrame\n    || window.webkitRequestAnimationFrame\n    || function (callback) {\n      window.setTimeout(callback, 1000 / 60)\n    }\n  )\n})()\n*/\n\nfunction gameLoop() {\n  requestAnimationFrame(gameLoop)\n\n  // TODO check to see how pause works in replays.\n  frame++\n\n  if (state.gameState === 0) {\n    // Playing\n\n    if (!state.paused) {\n      update()\n    }\n\n    // TODO improve this with 'dirty' flags.\n    if (\n      piece.x !== state.lastX\n      || Math.floor(piece.y) !== state.lastY\n      || piece.pos !== state.lastPos\n      || piece.dirty\n    ) {\n      clear(activeCtx)\n      piece.drawGhost()\n      piece.draw()\n    }\n    state.lastX = piece.x\n    state.lastY = Math.floor(piece.y)\n    state.lastPos = piece.pos\n    piece.dirty = false\n  } else if (state.gameState === 2) {\n\n    // Count Down\n    if (frame < 50) {\n      if (msg.innerHTML !== 'READY') msg.innerHTML = 'READY'\n    } else if (frame < 100) {\n      if (msg.innerHTML !== 'GO!') msg.innerHTML = 'GO!'\n    } else {\n\n      msg.innerHTML = ''\n      state.gameState = 0\n      state.startTime = Date.now()\n      piece.new(preview.next())\n\n    }\n\n    // DAS Preload\n    if (lastKeys !== keysDown && !watchingReplay) {\n      replayKeys[frame] = keysDown\n    } else if (frame in replayKeys) {\n      keysDown = replayKeys[frame]\n    }\n    if (keysDown & flags.moveLeft) {\n      lastKeys = keysDown\n      piece.shiftDelay = settings.DAS\n      piece.shiftReleased = false\n      piece.shiftDir = -1\n    } else if (keysDown & flags.moveRight) {\n      lastKeys = keysDown\n      piece.shiftDelay = settings.DAS\n      piece.shiftReleased = false\n      piece.shiftDir = 1\n    }\n  } else if (toGreyRow >= 2) {\n    /**\n     * Fade to grey animation played when player loses.\n     */\n    if (toGreyRow === 21) clear(activeCtx)\n    if (frame % 2) {\n      for (let x = 0; x < 10; x++) {\n        if (stack.grid[x][toGreyRow]) stack.grid[x][toGreyRow] = state.gameState - 1\n      }\n      stack.draw()\n      toGreyRow--\n    }\n  }\n}\n", "import { init, resize, menu, unpause, state } from './tetris'\n\nresize()\ninit(0)\n// menu(0)\n\n// For actions from HTML\nwindow.tetris = {\n  init,\n  menu,\n  unpause,\n  state\n}\n"],
  "mappings": "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",
  "names": ["rng", "clear", "ctx", "draw", "tetro", "cx", "cy", "color", "x", "len", "y", "wid", "drawCell", "state", "spriteCanvas", "range", "start", "end", "inc", "array", "mod", "num", "div", "set", "settings", "setting", "range", "array", "i", "Preview", "next", "rng", "clear", "previewCtx", "i", "draw", "pieces", "preview", "Hold", "clear", "holdCtx", "draw", "pieces", "hold", "setLoop", "arrowReleased", "arrowDelay", "key", "menus", "menu", "menuIndex", "i", "len", "currCell", "tempKey", "controls", "controlCells", "i", "len", "binds", "key", "e", "s", "settingsArrow", "settingsLoop", "arrowReleased", "arrowDelay", "settings", "setting", "saveSetting", "setLoop", "arrowRelease", "resize", "left", "right", "s", "settings", "div", "b", "iLeft", "span", "iRight", "setting", "left", "right", "set", "Piece", "index", "state", "pieces", "msg", "menu", "direction", "rotated", "i", "row", "curPos", "mod", "newPos", "x", "len", "keysDown", "flags", "lastKeys", "settings", "grav", "gravityArr", "distance", "temp", "hold", "preview", "cx", "cy", "tetro", "y", "stack", "gravity", "a", "setting", "activeCtx", "activeCanvas", "draw", "piece", "Stack", "x", "y", "cells", "i", "tetro", "once", "range", "valid", "piece", "state", "menu", "a", "b", "row", "len", "count", "gametype", "finesse", "statsPiece", "statsLines", "lineLimit", "clear", "stackCtx", "draw", "settings", "c", "lineCanvas", "stackCanvas", "lineCtx", "wid", "stack", "msg", "statsEl", "statsLines", "statsPiece", "h3", "holdCanvas", "bgStackCanvas", "stackCanvas", "activeCanvas", "previewCanvas", "spriteCanvas", "holdCtx", "bgStackCtx", "stackCtx", "activeCtx", "previewCtx", "spriteCtx", "kickData", "kickDataI", "kickDataO", "PieceI", "PieceJ", "PieceL", "PieceO", "PieceS", "PieceT", "PieceZ", "pieces", "finesse", "state", "gravityUnit", "gravity", "gravityArr", "array", "i", "frame", "lineLimit", "replayKeys", "watchingReplay", "toGreyRow", "gametype", "keysDown", "lastKeys", "binds", "flags", "resize", "a", "b", "c", "content", "screenHeight", "settings", "cellSize", "pad", "statsEl", "stackCanvas", "activeCanvas", "bgStackCanvas", "holdCanvas", "previewCanvas", "msg", "len", "h3", "makeSprite", "bg", "bgStackCtx", "piece", "stack", "preview", "hold", "init", "gt", "rng", "statsPiece", "statsLines", "clear", "stackCtx", "activeCtx", "holdCtx", "randomNums", "random", "y", "x", "menu", "gameLoop", "pause", "unpause", "bg", "ctx", "x", "state", "y", "makeSprite", "shaded", "glossy", "tgm", "world", "cellSize", "spriteCanvas", "i", "settings", "spriteCtx", "k", "grad", "e", "binds", "unpause", "pause", "init", "gametype", "watchingReplay", "keysDown", "flags", "update", "lastKeys", "replayKeys", "frame", "piece", "lineLimit", "msg", "menu", "gameLoop", "clear", "activeCtx", "preview", "toGreyRow", "stack", "resize", "init", "menu", "unpause", "state"]
}
